/*
 * RDBMS meta-model
 *
 * Model for the relational database management system meta-model, as defined
 * in the RDBMS.ecore Ecore meta-model.
 *
 * Demonstration of the models generated by the CD2DBS QVT-r bidirectional transformation.
 *
 * Used as running example in
 * [1] N. Macedo, T. GuimarÃ£es and A. Cunha. Model repair and transformation with Echo. ASE 2013.
 * 
 * author: nmm, 10/2012
 */
module DBS [Model]

sig DBS extends Model {}

abstract sig NamedEntity {
  NamedEntity_ : set DBS, 
  name : String -> DBS
}

sig Schema extends NamedEntity {   
  Schema_ : set DBS, 
  tables : Table -> DBS, 
  keys : FKey -> DBS
}

sig Table extends NamedEntity { 
  Table_ : set DBS, 
  columns : Column -> DBS
}

sig Column extends NamedEntity { 
  Column_ : set DBS
}

sig PKey { 
  PKey_ : set DBS,
  table : Table -> DBS,
  pcolumn : Column -> DBS
}

sig FKey { 
  FKey_ : set DBS, 
  refersTo : PKey -> DBS,
  fcolumn : Column -> DBS
}

fact {
  all m : DBS { 
     name.m in NamedEntity_.m -> one String 
     tables.m in Schema_.m one -> Table_.m 
     keys.m in Schema_.m one -> FKey_.m 
     columns.m in Table_.m one -> Column_.m 
     table.m in PKey_.m lone -> one Table_.m 
     pcolumn.m in PKey_.m lone -> one Column_.m 
     refersTo.m in FKey_.m -> one PKey_.m 
     fcolumn.m in FKey_.m lone -> one Column_.m 

     Schema_.m + Table_.m + Column_.m = NamedEntity_.m
  }
}

pred Conforms[m : DBS] { }

run Conforms for 3 but 1 DBS

/*
 * RDBMS model instance
 *
 * Instance for the relational database management system meta-model, as defined in the 
 * RDB_Company.xmi Ecore model.
 *
 * Demonstration of the models generated by the CD2DBS QVT-r bidirectional transformation.
 *
 * Used as running example in
 * [1] N. Macedo, T. GuimarÃ£es and A. Cunha. Model repair and transformation with Echo. ASE 2013.
 * 
 * author: nmm, 10/2012
 */
module D1 [Model]
open DBS[Model]

one sig Schema0 extends Schema {}
one sig Table0, Table1, Table2 extends Table {}
one sig Column0, Column1,Column2,Column3,Column4, Column5 extends Column {}
one sig PKey0 extends PKey {}
one sig FKey0 extends FKey {}

pred D1_Def [m : DBS] {
  NamedEntity_.m = Schema0 + Table0 + Table1 + Table2 +
							   Column0 + Column1 + Column2 + Column3 + Column4 + Column5						   
  PKey_.m = PKey0
  FKey_.m = FKey0

  name.m = Schema0 -> "Company" + Table0 -> "Department" + Table1 -> "Employee" +
			    	Table2 -> "Employer" + Column0 -> "name" + Column1 -> "name" + Column2 -> "salary" +
			        Column3 -> "department" + Column4 -> "name" + Column5 -> "location" &&
  tables.m = Schema0->Table &&
  keys.m = Schema0->FKey &&
  columns.m = Table0 -> Column0 + Table1 -> {Column1 + Column2} + Table2 -> Column4 + Table2 -> Column3 + Table0 -> Column5 &&
  table.m = PKey0 -> Table0 &&
  pcolumn.m = PKey0 -> Column0 &&
  refersTo.m = FKey0 -> PKey0 &&
  fcolumn.m = FKey0 -> Column3
}

/*one sig D1 extends DBS {}

run { D1_Def[D1] } for 3

assert D1_Conforms {
  D1_Def[D1] => Conforms[D1]
}

check D1_Conforms

-- no spurious elements
fact {
  NamedEntity = NamedEntity_.D1
  FKey = FKey_.D1
  PKey = PKey_.D1
}*/

-- force existence of needed strings
fact {
  "Company" +  "Department" + "Person" + "Employee" + 
  "Employer" + "name" + "department" + "salary" + "location" in String
}


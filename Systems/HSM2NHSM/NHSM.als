/*
 * HSM meta-model
 *
 * Model for the hierarchical state machines meta-model, as defined in the HSM.ecore Ecore meta-model.
 *
 * Demonstration of the models generated by the HSM2NHSM QVT-r and ATL bidirectional transformations.
 *
 * The graph-edit distance is defined to calculate model distances in transformations.
 *
 * Used as running example in
 * [1] N. Macedo and A. Cunha. Least-change bidirectional model transformation with QVT-R and ATL. SoSyM 2016
 * 
 * author: N. Macedo, 10/2012
 */
module NHSM [Model]

sig SMachine {
	SMachine_ : set Model,
	name : String -> Model,
	states : State -> Model,
	transitions : Transition -> Model
}

sig State {
	State_ : set Model,
	name : String -> Model,
}

sig Transition {
	Transition_ : set Model,
	source : State -> Model,
	target : State -> Model
}

fact Relations {
	all m : Model {
		SMachine<:name.m in (SMachine_.m -> one String)
		states.m in (SMachine_.m some -> State_.m)
		transitions.m in (SMachine_.m some -> Transition_.m)
		State<:name.m in (State_.m -> one String)
		source.m in (Transition_.m -> one State_.m)
		target.m in (Transition_.m -> one State_.m)

		no SMachine - SMachine_.Model
		no State - State_.Model
		no Transition - Transition_.Model

	}
}

fun Delta [nhm,nhm' : Model] : Int {
	(#((SMachine_.nhm - SMachine_.nhm') + (SMachine_.nhm' - SMachine_.nhm))).plus[
	(#((SMachine<:name.nhm - SMachine<:name.nhm') + (SMachine<:name.nhm' - SMachine<:name.nhm))).plus[
	(#((states.nhm - states.nhm') + (states.nhm' - states.nhm)))].plus[
	(#((transitions.nhm - transitions.nhm') + (transitions.nhm' - transitions.nhm))).plus[
	(#((State<:name.nhm - State<:name.nhm') + (State<:name.nhm' - State<:name.nhm))).plus[
	(#((source.nhm - source.nhm') + (source.nhm' - source.nhm))).plus[
	(#((target.nhm - target.nhm') + (target.nhm' - target.nhm)))]]]]]}

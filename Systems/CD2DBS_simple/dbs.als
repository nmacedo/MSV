/*
 * Simplified RDBMS meta-model
 *
 * Model for the relational database management system meta-model, as defined
 * in the RDBMS.ecore Ecore meta-model.
 *
 * Demonstration of the models generated by the simplified CD2DBS QVT-r bidirectional transformation.
 *
 * Used as running example in
 * [1] N. Macedo and A. Cunha. Implementing QVT-R bidirectional model transformations using Alloy. FASE 2013
 * 
 * author: N. Macedo, 10/2012
 */
 module DBS [Model]

-- the signature representing database schema models
sig DBS extends Model {}

-- the classes, associations and attributes from the database schema meta-model
-- each class A contains an additional state field A_ denoting which elements exist in each model
abstract sig NamedEntity {
  NamedEntity_ : set DBS, 
  name : String -> DBS
}

sig Schema extends NamedEntity {   
  Schema_ : set DBS, 
  tables : Table -> DBS
}

sig Table extends NamedEntity { 
  Table_ : set DBS, 
  columns : Column -> DBS
}

sig Column extends NamedEntity { 
  Column_ : set DBS
}

-- additional restrictions due to the local state idiom
fact {
  all m : DBS { 
    -- handle multiplicity and state consistency
    name.m in NamedEntity_.m -> one String 
    tables.m in Schema_.m one -> Table_.m 
    columns.m in Table_.m one -> Column_.m 

    -- the class hierarchy must also be handled for the state fields
    NamedEntity_.m = Schema_.m + Table_.m + Column_.m
  }
}

-- tests whether a provided class diagram conforms with the class diagram meta-model
-- in this case, there are no additional restrictions
pred Conforms[m : DBS] { }

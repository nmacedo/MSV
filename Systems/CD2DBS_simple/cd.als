/*
 * Simplified CD meta-model
 *
 * Model for the class diagram meta-model, as defined in the UML.ecore Ecore meta-model.
 *
 * Demonstration of the models generated by the simplified CD2DBS QVT-r bidirectional transformation.
 *
 * Used as running example in
 * [1] N. Macedo and A. Cunha. Implementing QVT-R bidirectional model transformations using Alloy. FASE 2013
 * 
 * author: N. Macedo, 10/2012
 */
 module CD [Model]

-- the signature representing class diagram models
sig CD extends Model {}

-- the classes, associations and attributes from the class diagram meta-model
-- each class A contains an additional state field A_ denoting which elements exist in each model
abstract sig NamedEntity {
  NamedEntity_ : set CD, 
  name : String -> CD
}

sig Package extends NamedEntity {   
  Package_ : set CD, 
  classes : Class -> CD,
}

sig Class extends NamedEntity { 
  Class_ : set CD, 
  attributes : Attribute -> CD, 
  general : Class -> CD, 
  persistent : set CD 
}

sig Attribute extends NamedEntity { 
  Attribute_ : set CD
}

-- additional restrictions due to the local state idiom
fact LocalState {
  all m : CD { 
    -- handle multiplicity and state consistency
    name.m in NamedEntity_.m -> one String
    classes.m in Package_.m one -> Class_.m 
    general.m in Class_.m -> lone Class_.m 
    attributes.m in Class_.m one -> Attribute_.m 
    persistent.m in Class_.m 

    -- the class hierarchy must also be handled for the state fields
    NamedEntity_.m = Package_.m + Class_.m + Attribute_.m
  }
}

-- tests whether a provided class diagram conforms with the class diagram meta-model
-- in this case, whether there is circular inheritance
pred Conforms[m : CD] {
  all self : Class_.m | self not in self.^(general.m)
}

